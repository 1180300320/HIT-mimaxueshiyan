<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--一般情况下,我们建议将mapper配置文件和接口文件放在同一个位置-->
<!--通过接口和mapper映射文件动态代理生成实现类-->
<!--设计规则:-->
<!--        mapper的namespace属性就是接口文件的全限定类名
            sql语句片段的id和接口的方法名相同
            resultType表示该语句返回的结果类型,如果返回的是集合类型resultType写集合中存储的对象的真实类型
            parameterType对应方法的形式参数
                如果是简单类型(8+1String),parameterType可以省略
-->
<mapper namespace="vip.epss.dao.UserMapper">
    <!--    查询操作 -->
    <select id="selectAll" resultType="User">
        select * from user
    </select>
    <select id="selectByUid" resultType="User">
        select * from user where uid=#{uid}
    </select>
<!--    插入操作-->
    <insert id="insert" parameterType="User">
        insert into user (username, password,usertype) values (#{username},#{password},#{usertype})
    </insert>
<!--    删除操作-->
    <delete id="delete">
        delete from user where uid=#{uid}
    </delete>
<!--    修改操作-->
    <update id="update" parameterType="User">
        update user set username=#{username},password=#{password},usertype=#{usertype} where uid=#{uid}
    </update>
</mapper>